day04

1、单文件组件
	1、先在你的项目当中创建一个components文件夹，用于放置我们后期定义的组件（配置对象）
	2、在你写代码的地方，一般我们需要创建一个App.vue的文件，它用于组装我们定义好的组件，App本质也是一个组件
	3、vm实例最终只需要去把App组件给注册然后去渲染就好了
	一个.vue文件，里面包含了组件的结构样式和行为，其实本质就是我们的配置对象（文件）
	写法高亮 比较明了  但是需要模块化  需要搭建环境




2、脚手架的安装和目录结构(参考全家桶)
	一、之前自己去搭建环境 配置webpack 只是一些基本的功能
		5/4/3
		2
        	区别

	1)	创建脚手架5/4/3       的vue项目, 并运行
		npm install -g @vue/cli    安装脚手架4/3的版本
		vue create vue-demo        使用安装的脚手架创建一个新的vue项目
		npm run serve              运行创建的项目命令


	2)	创建脚手架2的vue项目
		npm install -g @vue/cli-init
		vue init webpack vue-demo
    	npm run dev


	1. webpack配置
		(1)	2: 配置是暴露的, 我们可以直接在里面修改配置
		(2)	3: 配置是包装隐藏了, 需要通过脚手架扩展的vue.config.js来配置
	2. 运行启动命令
		(1)	2: npm run dev
		(2)	3: npm run serve 









3、eslint的禁用
	eslint的配置的错误级别
	1、
	// 局部禁用某个错误提示
	/* eslint-disable no-unused-vars */
	

	2、
	//package.json当中找到eslintConfig项，全局配置禁用某些错误提示
	"rules": {
		"no-unused-vars":"off"
    	}
	
	3、
	//开发阶段直接关闭eslint的提示功能

	vue.config.js当中
	module.exports = {
		//  写自己想要配置的东西去覆盖系统自带的
		// 关闭ESLint的规则
 		lintOnSave: false
	}


	
4、组件模板解析
	Vue渲染两种方式：
		1、render：h => h(App)
		2、components注册组件，template解析，但是vue导入需要导入带解析器的版本




5、git的基本使用6大步
		先有本地再有远程
		1、创建本地
		2、创建远程
		3、关联本地和远程
		4、本地修改推向远程
		5、远程修改拉向本地
		
		
		先有远程再有本地
		6、如果来的一个新员工，那么此时项目在远程已经存在，这个人只需要clone










6、todoList组件化开发（案例）


	静态页面
		拆分组件
		组装组件	 （定义组件 注册组件 使用组件）
		渲染组件


	动态页面
		1、初始化动态显示页面
			设计数据   todos = [ {id:1,content:'吃饭',isOver:false},{id:2,content:'睡觉',isOver:false}]

				设计数据规范：
					1> 数据格式是什么？
						看页面的功能 知道数据的格式 一般都是对象的数组
					2> 数据放在哪？
						看数据是在哪个组件用还是在哪些个组件使用
						如果数据仅仅是在哪个组件用，那么数据就定义在这个组件的data当中
						如果数据是在哪些个组件用，那么数据应该写在这些组件的公共父组件当中


						

			数据展示   初始化todo内容展示和是否选中的展示

				初始化展示数据分为：
					1、直接可以展示的数据
					2、需要计算才能展示的数据



		2、交互