1、props
  props是vue当中最基本的使用最多的组件通信方式之一 
  适用场合：父子之间
  父组件给子组件传递非函数数据： 父给子传
  父组件给子组件传递函数数据：子给父传


2、自定义事件
	原生dom事件和自定义事件区别
	事件类型：个数
	回调函数：都是自己定义的  原生的浏览器在调  默认参数$event是事件对象
					 自定义事件自己在调  默认参数$event是自己传递


	自定义事件：用到vue原型当中的两个方法： $on   $emit
			 其实还有两个和事件相关的方法： 
			 $once  代表绑定的事件只能触发一次 
			 $off   $off('事件名')

	适用场合：子向父

	在父组件当中可以看到子组件对象，可以给子组件绑定事件，回调留在父组件
	在子组件当中适当的时候，可以触发子组件身上绑定的事件，本质是在调用事件的回调

3、全局事件总线
	vue中组件通信的一种方式
	适用场合：任何场合
	全局事件总线本质是一个对象
	要符合2个条件：
		1、所有的组件对象都能找到它
		2、必须能调用$on $emit
	最终我们选择vm作为全局事件总线去使用

	做法：
		1、安装总线
		2、在接收数据的组件当中，找到bus，给bus绑定自定义事件，事件的回调就留在当前组件
		3、在发送数据的组件当中，找到bus，触发bus身上的自定义事件，本质是在调用事件的回调
	
4、通信方式 消息订阅和发布（用法类似于全局事件总线，vue当中几乎不用）   
	github查阅    pubsub-js第三方插件
	适用场合：任意场合
	订阅者是接收数据的组件
	发布者是发送数据的组件
	坑： 订阅者的回调函数里面形参第一个必须有，而且是为了接受发布者的消息类型的，实际意义没有，但是必须写上



5、通信方式 slot插槽
	一个组件会多次使用，但是又有少部分结构数据会发生变化，（当然可以用不同的子组件）

	那么就得通过父组件告诉子组件变化的内容是什么，此时就要用到这个插槽

	子组件当中<slot></sloat>其实就是占位用的，让父组件给它填充内容，可以带标签

	默认插槽
		子组件当中留插槽   <slot></slot>
		插槽不需要写name 
		如果父组件使用的时候不传递结构，那么插槽内部内容也会默认显示，如果传递了，就被覆盖


		父组件在使用子组件的时候，可以传递结构给子组件当中的插槽
		一般一个template对应一个插槽
		template当中需要写v-slot:default
		在template当中就可以给子组件的插槽传递结构数据


	具名插槽
		子组件当中留插槽   <slot name="aa"></slot>
		插槽需要写name起名字
		如果父组件使用的时候不传递结构，那么插槽内部内容也会默认显示，如果传递了，就被覆盖


		父组件在使用子组件的时候，可以传递结构给子组件当中的插槽
		一般一个template对应一个插槽
		template当中需要写v-slot:slot的name值
		在template当中就可以给子组件的插槽传递结构数据



	作用域插槽  
		子组件的slot可以通过 属性传递值给父组件，然后父组件可以根据不同需求改变这个slot内部的显示结构
		把子组件的值，传给父组件固定的区域进行操作

		父组件的数据是给子组件展示的
		子组件展示过程当中，数据的结构由父组件决定的。


  目前到这里，我们就学习了5种组件通信： props  自定义事件  全局事件总线  消息订阅发布  插槽  


6、vue-ajax使用和案例
	github的两个测试接口：获取比较火的仓库及获取用户
	接口1: https://api.github.com/search/repositories?q=v&sort=stars
	接口2: https://api.github.com/search/users?q=aa

	
	vue-resource vue插件的使用  vue1版本用的比较多  现在不用  	

	axios第三方库的使用


	login代表用户的用户名
	avatar_ur 代表用户的头像地址	
	url: 代表这个用户的github地址


	小案例：获取github用户
		1、静态页面实现   
			

		2、动态交互和初始化显示
			2-1初始化显示Main组件的内容  Main里面要显示的是不同内容，而不是直接就是用户信息
				四个数据控制显示的内容是什么： isFirst  isLoading errMsg  users 
			2-2交互：
				点击search按钮要发送ajax请求，需要分析ajax在哪发送（当然得安装axios）
				
				点击按钮之后，需要把输入的数据发送到Main组件去发送ajax请求(全局事件总线)
				
				在Main组件中的事件回调当中发送ajax请求，发送前 成功时 失败时 都要考虑显示的内容
					也就是说需要修改数据  isFirst  isLoading errMsg  users 
				请求成功：需要过滤数据，添加给我们自己的users
				请求失败：需要把失败信息添加给我们自己的errMsg 

		3、使用vue-resource发送请求，但是现在不推荐了，了解即可
			使用方式类似axios


		4、使用axios发送请求

7、跨域