day02	

1、条件渲染

2、列表渲染

3、、vue如何去监视数据变化而更新页面（点击按钮修改第一项）
	1、修改数组当中对象的属性，发现页面可以改变
	2、通过数组的下标直接修改数组当中的整个对象，发现页面改变不了
	3、调用数组的方法直接修改数组当中的整个对象，发现页面也可以改变
原因：
	修改数组当中对象的属性，都是可以修改的，因为对象的所有属性都添加了get和set方法（响应式数据），
	 data当中所有的对象的属性，都是响应式
	通过下标直接修改数组整个对象，不可以展示到页面，但是数据确实改了，数组的下标没有get和set

	通过数组的方法去修改整个对象也是可以修改的，因为vue当中重写了数组的部分原生方法，额外添加了展示到页面的功能

	
	对象数据和数组数据响应式的区别




4、过滤和排序 设计数据
	逻辑并不难，关键就看能不能想到用计算属性
	一个数据一开始不存在，根据另外的数据计算而产生，八九不离十要使用计算属性




5、强制绑定样式class和style
	class动态绑定：
		1、类名不确定  				                 字符串形式
		2、类名确定，但是不知道哪个生效                 对象形式
		3、类名有几个都生效                            数组形式   


	style动态绑定
		1、必须把原来的东西写在对象当中，样式名不变，样式值是动态的
		2、样式名如果不合法，要变为小驼峰写法


6、事件绑定方法
	v-on 只是绑定事件的复杂写法
	@ 只是简写


	1、回调写法
		回调不需要自己加括号，直接写函数名即可，函数在定义的时候第一个形参接收的就是事件对象


	2、函数调用
		函数调用是自己加括号调用，调用的时候，vue会自动在我们写的函数调用外层添加一个函数，这个函数才是真正的回调
		这个函数默认是有一个形参叫$event,(不能更改)， 我们在写的函数调用如果需要把事件对象传递下去，那么就得传实参
		$event,我们的函数定义就需要去接收这个参数，拿到事件对象去使用，如果不需要就不用传，函数内部也就拿不到事件对象。 如果我们传递参数不光要事件对象，还需要自己定义的参数，那么此时，需要在函数调用的时候，传递两个，一个是
		$event,一个是自己的参数

		$event后期我们称为叫做默认参数，在原生dom事件当中只要见到$event,代表的就是事件对象



7、自动收集表单数据v-model的应用
	输入框数据	输入的数据会自动赋值给data的数据
	单选框数据	选中的value值会自动付给data的数据
	多选框数据   单个使用操作的是布尔值   多个使用操作的是value值
	下拉菜单数据	选中的option的value值会自动赋值给data的数据
	文本域数据	写上的文本会自动赋值给data的数据